
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container">
    <div class="row">
        <div class="col-md-8 col-md-offset-2">

            <h1>Angular with D3</h1>
            <a class="btn btn-primary" href="~/Projects/AngularD3/AngularD3.html">Launch application</a>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-10 col-md-offset-1">
            <p>
                This web application produces interactive force-directed graphs. This project started as a fun experiment in combining two of my favourite JavaScript libraries: <a href="https://d3js.org/">D3.js</a> and <a href="https://angularjs.org/">AngularJS</a>. D3.js is a library for drawing and manipulating data with HTML, CSS and SVG and has a <a href="https://github.com/mbostock/d3/wiki/Gallery">vast array</a> of options for many different and beautiful data types.
            </p>
            <p>
                For this project, I was particularly interested in <a href="http://bl.ocks.org/mbostock/4062045">force-directed graphs</a>, a representation of objects and how they are connected. Force-directed graphs are often used to model road networks, the analysis of protein-protein interaction networks and have also been used to <a href="http://stm.sciencemag.org/content/6/234/234ra57">identify disease-trait pairs</a>.
            </p>
            <p>
                In a force-directed graph, the objects are typically called <strong>nodes</strong> (also called <em>vertices</em> or <em>points</em>) and the connections between them are called <strong>edges</strong> (also called <em>lines</em> or <em>arcs</em>).
            </p>
        </div>
        
    </div>


</div>



