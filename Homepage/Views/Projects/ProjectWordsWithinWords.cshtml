@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="post-title">
    <div class="post-title-text">
        <h1>Words within words</h1>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-md-10 col-md-offset-1">
            <p>
                I was interested in a question about words and letter replacement. If I take a word, such as <code>shoot</code>, can I remove a letter and still make a word?
                In this case, yes, of course: <code>hoot</code>. In fact, I can make three other words as well: <code>soot, shot, shoo</code>. So how many words do themselves contain words? And which word contains the most words within it?
            </p>
            <p>
                To answer these questions, we must decide on what counts as a 'word'. Do we include place names, proper nouns, etc.? Fortunately, <a href="https://en.wikipedia.org/wiki/Official_Scrabble_Players_Dictionary">some-one else</a> has done their level best to answer that question, so I'll just take the so-known 'SOWPODS' English word list containing a total of  267,753 words.
            </p>
            <p>
                The algorithm for this is remarkably simple:
                <ul>
                    <li>
                        Go through every word in the dictionary:
                        <ul>
                            <li>
                                Go through every letter in the word:
                                <ul>
                                    <li>
                                        Remove that letter from the word, check if the result is in the dictionary
                                        <ul>
                                            <li>If it is, store it alongside the origin (parent) word</li>
                                            <li>If it isn't, skip it</li>
                                        </ul>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </li>
                </ul>
            </p>
            <p>
                The code for this, and other questions, is available on <a href="https://github.com/mortenalbring/WordsWithinWords">GitHub</a>.
            </p>
            <p>
                The result of running this finds that 129,677 (48.43%) words in the English dictionary contain other words.
            </p>
            <p>
                As for the word with the most number of words within it, there are four joint winners each with 6 subwords

                <ul>


                    @{
                        var words = new List<string>()
                                                                                {
                        "dearns: earns darns derns deans dears dearn",
"heards: eards hards herds heads hears heard",
"spared: pared sared spred spaed spard spare",
"yeards: eards yards yerds yeads years yeard"
                    };

                        foreach (var word in words)
                        {
                            <li>
                                <code>
                                    @{
                                        var wordsSpl = word.Split(' ').ToList();

                                        foreach (var sp in wordsSpl)
                                        {
                                            <a href="https://en.wiktionary.org/wiki/@sp.Replace(":","")">
                                                <span>@sp</span>
                                            </a>

                                        }
                                    }

                                </code>
                            </li>
                        }

                    }
                </ul>
            </p>

            <p>
                This does spit out some pretty peculiar words, such as '<a href="https://1word.ws/eards">eards</a>', '<a href="https://1word.ws/sared">sared</a>', and '<a href="https://1word.ws/yerds">yerds</a>'. No idea what they mean or why they're in this dictionary, but they are valid scrabble words. 
            </p>


        </div>
    </div>

    <strong>Resources:</strong>
    <br />
    <ul>
        <li>
            <a href="https://daily.jstor.org/codifying-what-counts-as-a-word-in-scrabble/">Codifying What Counts as a Word in Scrabble</a>
        </li>
 
    </ul>

</div>