@using System.Collections
@using System.Collections.Generic
@using System.Linq
@using System.Runtime.CompilerServices
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="post-title">
    <div class="post-title-text">
        <h1>Words within words</h1>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-md-10 col-md-offset-1">
            <p>
                I was interested in a question about words and letter replacement. If I take a word, such as <code>shoot</code>, can I remove a letter and still make a word?
                In this case, yes, of course: <code>hoot</code>. In fact, I can make three other words as well: <code>soot, shot, shoo</code>. So how many words do themselves contain words? And which word contains the most words within it?
            </p>
            <p>
                To answer these questions, we must decide on what counts as a 'word'. Do we include place names, proper nouns, etc.? Fortunately, <a href="https://en.wikipedia.org/wiki/Official_Scrabble_Players_Dictionary">some-one else</a> has done their level best to answer that question, so I'll just take the so-known 'SOWPODS' English word list containing a total of  267,753 words.
            </p>
            <p>
                The algorithm for this is remarkably simple:
                <ul>
                    <li>
                        Go through every word in the dictionary:
                        <ul>
                            <li>
                                Go through every letter in the word:
                                <ul>
                                    <li>
                                        Remove that letter from the word, check if the result is in the dictionary
                                        <ul>
                                            <li>If it is, store it alongside the origin (parent) word</li>
                                            <li>If it isn't, skip it</li>
                                        </ul>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </li>
                </ul>
            </p>
            <p>
                The code for this, and other questions, is available on <a href="https://github.com/mortenalbring/WordsWithinWords">GitHub</a>.
            </p>
            <p>
                The result of running this finds that 129,677 (48.43%) words in the English dictionary contain other words.
            </p>
            <p>
                As for the word with the most number of words within it, there are four joint winners each with 6 subwords

                <ul>
                    @{
                        var words = new List<string>() { "dearns: earns darns derns deans dears dearn", "heards: eards hards herds heads hears heard", "spared: pared sared spred spaed spard spare", "yeards: eards yards yerds yeads years yeard" };

                        @DisplayWordsWithinWords(words, "https://en.wiktionary.org/wiki/");
                    }
                </ul>
            </p>

            <p>
                This does spit out some pretty peculiar words, such as '<a href="https://1word.ws/eards">eards</a>', '<a href="https://1word.ws/sared">sared</a>', and '<a href="https://1word.ws/yerds">yerds</a>'. No idea what they mean or why they're in this dictionary, but they are valid scrabble words.
            </p>

            <p>
                We can of course run this for other languages, provided we can find comprehensive dictionaries in plain text form. This is surprisingly difficult. For Norwegian, the only list I could find contains only 61,414 words despite the 'Norsk Ordbok' supposedly containing 500,000 words.
            </p>

            <p>Running this list finds 25,447 (41.44 %) Norwegian words with other Norwegian words within them.</p>

            <p>
                Norwegian has seven words with five subwords
                <ul>
                    @{
                        var nwords = new List<string>() {"grein: rein gein grin gren grei", "leide: eide lide lede leie leid", "leike: eike like leke leie leik", "meine: eine mine mene meie mein", "skure: kure sure skre skue skur", "tåren: åren tren tåen tårn tåre", "veike: eike vike veke veie veik"
                };
                        @DisplayWordsWithinWords(nwords, "https://no.wiktionary.org/wiki/");
                    }
                </ul>
            </p>

            <table class="table">
                <thead>
                    <tr>
                        <th>Language</th>
                        <th>Dictionary length</th>
                        <th>Words within words</th>
                        <th>Percentage</th>
                        <th>Most subwords</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            English
                        </td>
                        <td>
                            267,753
                        </td>
                        <td>
                            129,677
                        </td>
                        <td>
                            48.43%
                        </td>
                        <td>
                            6
                        </td>
                    </tr>

                    <tr>
                        <td>
                            Norwegian
                        </td>
                        <td>
                            61,414
                        </td>
                        <td>
                            25,447
                        </td>
                        <td>
                            41.43%
                        </td>
                        <td>
                            5
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Danish
                        </td>
                        <td>
                            23,516
                        </td>
                        <td>
                            7,875
                        </td>
                        <td>
                            33.48%
                        </td>
                        <td>
                            3
                        </td>
                    </tr>
                    <tr>
                        <td>
                            German
                        </td>
                        <td>
                            165,995
                        </td>
                        <td>
                            84,181
                        </td>
                        <td>
                            50.71%
                        </td>
                        <td>
                            4
                        </td>
                    </tr>

                    <tr>
                        <td>
                            French
                        </td>
                        <td>
                            208,914
                        </td>
                        <td>
                            120,339
                        </td>
                        <td>
                            57.60%
                        </td>
                        <td>
                            6
                        </td>
                    </tr>

                    <tr class="active">
                        <td>
                            Combined
                        </td>
                        <td>
                            698,164
                        </td>
                        <td>
                            372,160
                        </td>
                        <td>
                            53.30%
                        </td>
                        <td>
                            6
                        </td>
                    </tr>

                </tbody>
            </table>


            <p>I will update this table if I can find more comprehensive word lists for these languages.</p>
            <p>The final row takes all of the other dictionaries and combines them together in one single list.</p>


            <p>
                As an aside, a slight variation of this code can also find all words with the letters in alphabetical order. Of the 267,753 words in this English dictionary, 861 words contain all the letters in alphabetical order.

                The longest ones are 7 characters long:
                <br />
                @{
                    var alphabetWords = new List<string>() { "addeems", "beefily", "billowy", "chikors", "dikkops", "gimmors" };
                    @DisplayWordsInline(alphabetWords, "https://en.wiktionary.org/wiki/")
                }

                The 8 letter word 'aegilops' is often reported as the longest word with all letters in alphabetical order, but this is <a href="https://1word.ws/aegilops">not a valid scrabble word</a>.
            </p>

            <p>
                As an aside to the aside, we can also find the longest words with no repeating characters. There are two, each with 16 letters: @DisplayWordsInline(new List<string>() { "dermatoglyphics", "uncopyrightable" }, "https://en.wiktionary.org/wiki/")
            </p>

            <hr />

            <p>This question of words within words led me to a related question. </p>
            <ul>
                <li>Let's start with a word, and remove a character to make another word (as before).  </li>
                <li>From this new word, see if we can remove a character and make yet another word</li>
                <li>Repeat for as long as possible</li>
            </ul>
            <br />
            For example:
            @DisplayWordChain(new List<string>() { "boarder", "borer", "bore", "ore" })



            <p>
                But what is the longest chain we can make?
            </p>


        </div>

    </div>

    <strong>Resources:</strong>
    <br />
    <ul>
        <li>
            <a href="https://daily.jstor.org/codifying-what-counts-as-a-word-in-scrabble/">Codifying What Counts as a Word in Scrabble</a>
        </li>

        <li>
            <a href="http://www.gwicks.net/dictionaries.htm">GWicks Dictionaries list</a>
        </li>

    </ul>

</div>


@helper DisplayWordChain(List<string> wordChain)
{
    for (int i = 0; i < wordChain.Count(); i++)
    {

        <code>@wordChain[i]</code>

        if (i < wordChain.Count)
        {
            <span>→</span>
        }

    }

}

@helper DisplayWordsInline(IEnumerable<string> words, string urlPrefix)
{
    foreach (var word in words)
    {
        <code>
            <a href="@string.Concat(urlPrefix,word)">
                <span>@word.Trim()</span>
            </a>
        </code>
    }

}

@helper DisplayWordsWithinWords(IEnumerable<string> words, string urlPrefix)
{
    foreach (var word in words)
    {
        <li>
            <code>
                @{
                    var wordsSpl = word.Split(' ').ToList();

                    foreach (var sp in wordsSpl)
                    {
                        <a href="@string.Concat(urlPrefix,@sp.Replace(":",""))">
                            <span>@sp.Trim()</span>
                        </a>
                    }
                }
            </code>
        </li>
    }

}